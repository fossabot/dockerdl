name: Docker Build

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  schedule:
    # Runs at 00:10 am every Monday
    - cron: "10 0 * * 1"
  push:
    branches: ["main"]
    paths-ignore:
      - "**.md"
    # Publish semver tags as releases.
    tags: ["v*.*.*"]
  pull_request:
    branches: ["main"]
    paths-ignore:
      - "**.md"

concurrency:
  group: ci-tests-${{ github.ref }}-1
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: ./conda.Dockerfile
            tag: conda
          - dockerfile: ./no-conda.Dockerfile
            tag: no-conda
          - dockerfile: ./pytorch.Dockerfile
            tag: pytorch
          - dockerfile: ./pytorch-nightly.Dockerfile
            tag: pytorch-nightly
          - dockerfile: ./tensorflow.Dockerfile
            tag: tensorflow
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@main
        with:
          cosign-release: "v1.13.1"

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            matifali/dockerdl
          # ghcr.io/matifali/dockerdl
          # generate Docker tags based on the matrix values and add latest tag to no-conda image
          tags: |
            type=raw,value=${{ matrix.tag }}
          # create labels for the image
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ steps.meta.outputs.created }}
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}
            org.opencontainers.image.authors=${{ github.event.repository.owner.login }}

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      # - name: Log into registry ghcr.io
      #   if: github.event_name != 'pull_request'
      #   uses: docker/login-action@v2
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      # Login to DockerHub
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Add latest tag to no-conda image
      - name: Add latest tag to no-conda image
        if: github.event_name != 'pull_request' && matrix.tag == 'no-conda'
        run: |
          docker pull matifali/dockerdl:no-conda
          docker tag matifali/dockerdl:no-conda matifali/dockerdl:latest
          docker push matifali/dockerdl:latest
          docker pull ghcr.io/matifali/dockerdl:no-conda
          docker tag ghcr.io/matifali/dockerdl:no-conda ghcr.io/matifali/dockerdl:latest
          docker push ghcr.io/matifali/dockerdl:latest

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          COSIGN_EXPERIMENTAL: "true"
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: |
          cosign sign \
          matifali/dockerdl:${{ matrix.tag }}

      - name: Verify the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: |
          cosign verify \
          matifali/dockerdl:${{ matrix.tag }}
